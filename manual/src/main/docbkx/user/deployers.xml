<?xml version="1.0" encoding="UTF-8"?>
<!--

    Licensed to the Austrian Association for Software Tool Integration (AASTI)
    under one or more contributor license agreements. See the NOTICE file
    distributed with this work for additional information regarding copyright
    ownership. The AASTI licenses this file to you under the Apache License,
    Version 2.0 (the "License"); you may not use this file except in compliance
    with the License. You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->

<chapter version="5.0"
         xsi:schemaLocation="http://docbook.org/ns/docbook http://www.docbook.org/xml/5.0/xsd/docbook.xsd   http://www.w3.org/1999/xlink http://www.docbook.org/xml/5.0/xsd/xlink.xsd   http://www.w3.org/2001/XMLSchema-instance http://www.w3.org/2001/XMLSchema-instance.xsd"
         xml:id="user.deployers" xmlns="http://docbook.org/ns/docbook"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns:xlink="http://www.w3.org/1999/xlink"
         xmlns:ns="http://docbook.org/ns/docbook">
  <title>Deployer services</title>

  <para>
    The OpenEngSB supports file-based configuration through its deployer services.
    These services are constantly checking the "config/" directory for new/changed/deleted configuration files.
  </para>
  <para>
    If a new file is created, its configuration is loaded into the OpenEngSB. When the file changes the configuration is updated
    and when it is deleted the configuration is unloaded. Each deployer handles a different type of configuration file
    represented by different file name extensions. Details and structure of these files are covered in this section.
  </para>
  <para>
    It should be noted that the OpenEngSB itself uses deployer services for internal configuration. For this purpose the
    deployer services also listen for configuration files in "etc/". These config files however are essential for the
    correct operation of the OpenEngSB and should not be modified.
  </para>

  <section xml:id="user.deployers.connector">
    <title>Connector configuration</title>
    <para>
      The connector deployer service creates, updates or deletes instances of connector services.
    </para>
    <para>
      All files in the "config/" directory with the extension ".connector" are handled by the connector deployer.
      The .connector files have to be simple property files containing the configuration properies of a certain connector service
      and their values. Those files have to follow a specific form to be read correctly. First of all they follow the pattern:
      "domain+connector+instance.connector". Here "domain" stands for the domainId to use (e.g. notification), "connector" for the
      name of the connector which should be created in the domain (e.g. mail) and "instance" is a unique id per connector. A simple
      UUID or a unique counter should do here. The content of the file is two-fold. On one hand you can configure the properties of
      a service directly using property.NAME_OF_THE_PROPERTY=VALUE_OF_THE_PROPERTY (for example property.location.root=notificaiton).
      Those properties are directly added to the properties of a service. On the other hand you have to configure the connectors
      themselves. Therefore you have the attribute.NAME_OF_THE_CONNECTOR_ATTRIBUTE=VALUE_TO_ASSIGN. Throwing this together you can
      end with a connector file as shown next.
    </para>
    <example>
      <title>Example .connector configuration file for the email connector </title>
      <para>
        The email connector is regsitered in the root context with the name notify. The file name has to be
        notificaiton+email+dc110658-c6be-4470-8b41-6db154301791.connector which represents a connector instance with the instanceId 
        dc110658-c6be-4470-8b41-6db154301791 of the eemail connector in the notificaiton domain.
      </para>
      <programlisting>
property.location.root=notify
attribute.user = user
attribute.password = test
attribute.prefix = [test]
attribute.smtpAuth = true
attribute.smtpSender = test@test.com
attribute.smtpPort = 25
attribute.smtpHost = smtp.testserver.com
      </programlisting>
    </example>
    <section xml:id="user.deployers.connector.root">
      <title>Root services</title>
      <para>
        Note, that root services (i.e. connector services deployed from the "etc/" directory) are deployed with a lower
        service ranking.
        This is done so that normal services are preferred when matching services.
      </para>
    </section>
  </section>
  <section xml:id="user.deployers.context">
    <title>Context configuration</title>
    <para>
      The context deployer service creates contexts according to any .context files found in the config directory. The context 
      id is the file-name (without the extension). The file content will be ignored. So for example
    </para>
  </section>
</chapter>

